continue
continue
print /d x_index
print /d vert.y
delete 4
continue
print ray->dir
print x_index
print /d x_index

break helper.c:40 if ray->dir = 270
run
print vert.y
print /d vert.y
continue
print /d vert.y
continue
print /d vert.y
continue
print /d vert.y
continue
print /d vert.y
continue
print /d vert.y
quit
break helper.c:40 if ray->dir = 270
run
print /d vert.y
continue
print /d vert.y
continue
print /d vert.y
print collision
print /d collision
print /d ya
break helper.c:50 if ray->dir = 270
continue
print /d vert.x
print /d vert.y
continue
continue
continue
continue
continue
delete 2
delete 3
clear
continue
delete 1
continue
backtrace
backtrace
print ray->dir
print ray->pos
print /d ray->pos
print /d xa
print /d ya
print /d vert.x
print /d vert.y
print /f vert.y
print /d vert.y
quit
run
prinf /d actual_distance
print /d actual_distance
print /d player.dir
print /d ray.dir
print /d ray->dir
print /f ray->dir
print x
print /d x
print /d y
print /d y
print /d hor.x
quit
run
print actual_distance
print ray->dir
break helper.c:180 if distance = 0
run
break helper.c:180 if distance == 0
delete 1
run
print /d x
print /d y
hor.x
print /d hor.x
print /d hor.y
print /f hor.y
print /f hor.x
quit
run
print ray->dir
break helper.c:180 if distance == 0
run
print /x vert
print /d vert
print /f vert
print /f hor
break 42
delete 2
delete 1
break helper.c:42
run
print ray->dir
print xa
print ya
quit
break helper.c:42
run
print /d xa
print /f xa
print /f ya
print /f vert.y
print /f vert.x
print /f vert.x
print /d vert.x
print /f vert.x
clear
print /f vert.x
print /f vert.y
print /f ray->pos.x
print /d ray->pos.x
quit
break helper.c:42
clear
run
print /d vert.x
print /f vert.x
print /f vert.y
print /f ray->pos.y
print /d ray->pos.y
print /d ray->pos.y * 64
print /d ray->pos.y / 64
print /d ray->pos.y // 64
print /d ray->pos.y / 64
break 23
clear
run
print vert.x
print vert.y
quit
break 24
break helper.c24
break helper.c:24
clear
delete 1
run
quit
break helper.c:24
run
quit
break helper.c:24
run
printf(ray->pos.x
print ray->pos.x
print /f ray->pos.x
print /d ray->pos.x
print /d ray->pos.x / 64
file build/maze
list break
list breakpoint
break
run
file build/maze
run
file build/maze
run
file build/maze
run
file build/maze
run
print ray->pos.x
print /d ray->pos.x
print /f ray->pos.x
print /d ray->pos.x
run
print ray->pos.x
print ray->pos
print /d ray->pos
print /d ray->posd
print /d ray->pos
quit
break helper.c:24
run
file build/maze
run
file build/maze
run
file build/maze
run
file build/maze
run
run
file build/maze
run
continue
delete 1
continue
quit
run
continue
clear
file build/maze
run
break helper.c:42 if ray->dir = 110
clear
run
continue
print ray->dir
continue
continue
continue
continue
continue
continue
continue
continue
continue
continue
continue
continue
continue
continue
continue
continue
continue
continue

continue
continue
delete 1
list breakpoint
break
delete 2
break helper.c:42 if (ray->dir == 110 && ray->pos.x == 319 && ray->pos.y == 472)
run
file build/maze
run
quit
run
quit
run
backtrace
print /d actual_distance
print /d value
print /f value
print /d y
print /d x
print /d vert.y
print /f vert.y
print /f vert.x
quit
run
print actual_distance
quit
