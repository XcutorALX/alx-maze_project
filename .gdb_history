print vert.y
quit
break 24
break helper.c24
break helper.c:24
clear
delete 1
run
quit
break helper.c:24
run
quit
break helper.c:24
run
printf(ray->pos.x
print ray->pos.x
print /f ray->pos.x
print /d ray->pos.x
print /d ray->pos.x / 64
file build/maze
list break
list breakpoint
break
run
file build/maze
run
file build/maze
run
file build/maze
run
file build/maze
run
print ray->pos.x
print /d ray->pos.x
print /f ray->pos.x
print /d ray->pos.x
run
print ray->pos.x
print ray->pos
print /d ray->pos
print /d ray->posd
print /d ray->pos
quit
break helper.c:24
run
file build/maze
run
file build/maze
run
file build/maze
run
file build/maze
run
run
file build/maze
run
continue
delete 1
continue
quit
run
continue
clear
file build/maze
run
break helper.c:42 if ray->dir = 110
clear
run
continue
print ray->dir
continue
continue
continue
continue
continue
continue
continue
continue
continue
continue
continue
continue
continue
continue
continue
continue
continue
continue

continue
continue
delete 1
list breakpoint
break
delete 2
break helper.c:42 if (ray->dir == 110 && ray->pos.x == 319 && ray->pos.y == 472)
run
file build/maze
run
quit
run
quit
run
backtrace
print /d actual_distance
print /d value
print /f value
print /d y
print /d x
print /d vert.y
print /f vert.y
print /f vert.x
quit
run
print actual_distance
quit
print vert.x
run
print x
print /d x
print /d y
print /d vert.x
print /f vert.x
print /f vert.y
print /f hor.x
print /f hor.y
print (x == -1 || (y != -1 && x < y))
quit
watch height
 break 52
run
print height
print /d height
print /d width
print /d map
print /d map->height
print /d map->width
watch map->height
continue
print x_index
print /d x_index
print /d y_index
print cells
print cells[1]
print cells[1][2]
print cells[2][2]
print cells[2][1]
print map
print map->cells
print map->cells[1]
print map->cells[2]
print map->cells[2][1]
print &(grid[ y_index ][ x_index ])
print &(cells[ y_index ][ x_index ])
print cells[y_index][x_index]
quit
run
print grid
watch grid
run
watch map
run
quit
run
print map
print *map
print **map
print *map
print *map->cells
print *map->cell
print *map->height
quit
list main
break 50
run
print map
print map->height
print /d map->height
print /d map->width
print /d map->cells
print /d map->cells[0][0]
quit
run
print /d actual_distance
print vert
print hor
print vert
quit
run
print player.pos
quit
run
print player
print player->pos.x
print player->pos.y
quit
run
print y_index
print /d y_index
print /d x_index
print player->pos.x
print player->pos.y
print /f player->pos.y
print /f player->pos.x
quit
run
quit
run
print x_index
print /d x_index
print /d y_index
quit
run
print x_start
print /d x_start
print /d x_index
print /d x_indexc - x_start
print /d x_index - x_start
print y_index
print /d y_index
print local
print local[1]
print local[2]
print local[2][0]
print local[1][0]
print local[1][1]
print local[1][2]
print local[1][3]
print local[1][]
print local[1][4]
print local[1][5]
print local[1][6]
print local[1][7]
print local[1][8]
print local[1][9]
print local[1][10]
print local[1][11]
print local[1][12]
print local[1][13]
print local[1][14]
print local[1][15]
print local[1][16]
print local[1][13]
print /d local[1][13]
print /f local[1][13]
print /d local[0][1]
print /d local[0][2]
print /d local[0][3]
print /d local[0][4
print /d local[0][4]
print /d local[0][5]
print /d local[0][6]
print /d local[0][7]
print /d local[0][8]
print /d local[0][9]
quit
